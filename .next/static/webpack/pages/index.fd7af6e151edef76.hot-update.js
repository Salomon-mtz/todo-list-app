"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/todos.js":
/*!************************!*\
  !*** ./pages/todos.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Todos; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Grid,IconButton,Tab,Tabs,TextField,Typography!=!@mui/material */ \"__barrel_optimize__?names=Box,Grid,IconButton,Tab,Tabs,TextField,Typography!=!./node_modules/@mui/material/index.js\");\n/* harmony import */ var _mui_icons_material_Add__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/icons-material/Add */ \"./node_modules/@mui/icons-material/Add.js\");\n/* harmony import */ var _components_taskCard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/taskCard */ \"./components/taskCard.js\");\n\nvar _s = $RefreshSig$();\n // Importing hooks from React for state management and side effects\n // Importing Material-UI components\n // Importing the AddIcon component from Material-UI\n // Importing the TaskCard component\nfunction Todos() {\n    _s();\n    // State management\n    const [tasks, setTasks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // State to store the list of tasks\n    const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\"); // State for the title of a new task\n    const [subtaskTitle, setSubtaskTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\"); // State for the title of a new subtask\n    const [commentText, setCommentText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\"); // State for the text of a new comment\n    const [editingTaskId, setEditingTaskId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // State to track the task being edited\n    const [editingCommentId, setEditingCommentId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // State to track the comment being edited\n    const [activeTab, setActiveTab] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"all\"); // State to manage the active tab (all, pending, completed)\n    // Effect to fetch tasks from the server when the component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchTasks();\n    }, []);\n    // Function to fetch tasks from the server\n    const fetchTasks = async ()=>{\n        const res = await fetch(\"http://localhost:5001/api/tasks\", {\n            headers: {\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            }\n        });\n        const data = await res.json();\n        console.log(\"API response:\", data);\n        if (Array.isArray(data)) {\n            setTasks(data); // Set the fetched tasks in state\n        } else {\n            setTasks([]); // Clear tasks if the response is not an array\n            console.error(\"Unexpected API response:\", data);\n        }\n    };\n    // Function to add a new task\n    const addTask = async (e)=>{\n        e.preventDefault(); // Prevent the default form submission behavior\n        const res = await fetch(\"http://localhost:5001/api/tasks\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            },\n            body: JSON.stringify({\n                title\n            })\n        });\n        if (res.ok) {\n            fetchTasks(); // Refresh tasks after successful addition\n            setTitle(\"\"); // Clear the task title input\n        } else {\n            console.error(\"Error adding task\");\n        }\n    };\n    // Function to edit an existing task\n    const editTask = async function(taskId) {\n        let updatedTitle = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : title, updatedSubtasks = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, updatedStatus = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n        const task = tasks.find((t)=>t._id === taskId);\n        if (!task) {\n            console.error(\"Task not found with ID:\", taskId);\n            return;\n        }\n        const res = await fetch(\"http://localhost:5001/api/tasks/\".concat(taskId), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            },\n            body: JSON.stringify({\n                title: updatedTitle || task.title,\n                status: updatedStatus || task.status,\n                subtasks: updatedSubtasks || task.subtasks\n            })\n        });\n        if (res.ok) {\n            fetchTasks(); // Refresh tasks after successful edit\n            setTitle(\"\"); // Clear the task title input\n            setEditingTaskId(null); // Reset the editing state\n        } else {\n            console.error(\"Error editing task\");\n        }\n    };\n    // Function to delete an existing task\n    const deleteTask = async (taskId)=>{\n        const res = await fetch(\"http://localhost:5001/api/tasks/\".concat(taskId), {\n            method: \"DELETE\",\n            headers: {\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            }\n        });\n        if (res.ok) {\n            fetchTasks(); // Refresh tasks after successful deletion\n        } else {\n            console.error(\"Error deleting task\");\n        }\n    };\n    // Function to add a new subtask to an existing task\n    const addSubtask = async (taskId, newSubtaskTitle)=>{\n        const task = tasks.find((task)=>task._id === taskId);\n        const updatedSubtasks = [\n            ...task.subtasks,\n            {\n                title: newSubtaskTitle,\n                status: \"pending\"\n            }\n        ];\n        const res = await fetch(\"http://localhost:5001/api/tasks/\".concat(taskId), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            },\n            body: JSON.stringify({\n                title: task.title,\n                subtasks: updatedSubtasks\n            })\n        });\n        if (res.ok) {\n            fetchTasks(); // Refresh tasks after successful addition of subtask\n            setSubtaskTitle(\"\"); // Clear the subtask title input\n        } else {\n            console.error(\"Error adding subtask\");\n        }\n    };\n    // Function to toggle the status of a task between 'pending' and 'completed'\n    const toggleTaskStatus = (task)=>{\n        const newStatus = task.status === \"pending\" ? \"completed\" : \"pending\";\n        editTask(task._id, task.title, task.subtasks.map((subtask)=>({\n                ...subtask,\n                status: subtask.status === \"pending\" && newStatus === \"completed\" ? \"completed\" : subtask.status\n            })), newStatus // Pass the new status\n        );\n    };\n    // Function to edit an existing subtask\n    const editSubtask = async (taskId, subtaskIndex, newSubtaskTitle)=>{\n        const task = tasks.find((task)=>task._id === taskId);\n        const updatedSubtasks = task.subtasks.map((subtask, index)=>index === subtaskIndex ? {\n                ...subtask,\n                title: newSubtaskTitle\n            } : subtask);\n        const res = await fetch(\"http://localhost:5001/api/tasks/\".concat(taskId), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            },\n            body: JSON.stringify({\n                title: task.title,\n                subtasks: updatedSubtasks\n            })\n        });\n        if (res.ok) {\n            // Update the local state to reflect the edited subtask\n            setTasks((prevTasks)=>prevTasks.map((t)=>t._id === taskId ? {\n                        ...t,\n                        subtasks: updatedSubtasks\n                    } : t));\n        } else {\n            console.error(\"Error editing subtask\");\n        }\n    };\n    // Function to delete a subtask from an existing task\n    const deleteSubtask = async (taskId, subtaskIndex)=>{\n        const task = tasks.find((task)=>task._id === taskId);\n        const updatedSubtasks = task.subtasks.filter((_, index)=>index !== subtaskIndex);\n        const res = await fetch(\"http://localhost:5001/api/tasks/\".concat(taskId), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            },\n            body: JSON.stringify({\n                title: task.title,\n                subtasks: updatedSubtasks\n            })\n        });\n        if (res.ok) {\n            fetchTasks(); // Refresh tasks after successful deletion of subtask\n        } else {\n            console.error(\"Error deleting subtask\");\n        }\n    };\n    // Function to toggle the status of a subtask between 'pending' and 'completed'\n    const toggleSubtaskStatus = async (taskId, subtaskIndex)=>{\n        const task = tasks.find((task)=>task._id === taskId);\n        const updatedSubtasks = task.subtasks.map((subtask, index)=>index === subtaskIndex ? {\n                ...subtask,\n                status: subtask.status === \"pending\" ? \"completed\" : \"pending\"\n            } : subtask);\n        // Update the task status based on subtasks completion\n        const allSubtasksCompleted = updatedSubtasks.every((subtask)=>subtask.status === \"completed\");\n        const newTaskStatus = allSubtasksCompleted ? \"completed\" : \"pending\";\n        const res = await fetch(\"http://localhost:5001/api/tasks/\".concat(taskId), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            },\n            body: JSON.stringify({\n                title: task.title,\n                status: newTaskStatus,\n                subtasks: updatedSubtasks\n            })\n        });\n        if (res.ok) {\n            fetchTasks(); // Refresh tasks after successful toggling of subtask status\n        } else {\n            console.error(\"Error toggling subtask status\");\n        }\n    };\n    // Function to add a comment to a task\n    const addComment = async (taskId, newCommentText)=>{\n        const res = await fetch(\"http://localhost:5001/api/tasks/\".concat(taskId, \"/comments\"), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            },\n            body: JSON.stringify({\n                text: newCommentText\n            })\n        });\n        if (res.ok) {\n            fetchTasks(); // Refresh tasks after successful addition of comment\n            setCommentText(\"\"); // Clear the comment input field\n        } else {\n            console.error(\"Error adding comment\");\n        }\n    };\n    // Function to edit an existing comment on a task\n    const editComment = async (taskId, commentId, updatedCommentText)=>{\n        const res = await fetch(\"http://localhost:5001/api/tasks/\".concat(taskId, \"/comments/\").concat(commentId), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            },\n            body: JSON.stringify({\n                text: updatedCommentText\n            })\n        });\n        if (res.ok) {\n            fetchTasks(); // Refresh tasks to reflect the update\n            setCommentText(\"\"); // Clear the comment text input\n            setEditingCommentId(null); // Reset the editing state\n        } else {\n            console.error(\"Error editing comment\");\n        }\n    };\n    // Function to delete a comment from a task\n    const deleteComment = async (taskId, commentId)=>{\n        const res = await fetch(\"http://localhost:5001/api/tasks/\".concat(taskId, \"/comments/\").concat(commentId), {\n            method: \"DELETE\",\n            headers: {\n                Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n            }\n        });\n        if (res.ok) {\n            fetchTasks(); // Refresh tasks after successful deletion of comment\n        } else {\n            console.error(\"Error deleting comment\");\n        }\n    };\n    // Filter tasks based on the active tab (all, pending, completed)\n    const filteredTasks = tasks.filter((task)=>{\n        if (activeTab === \"pending\") return task.status === \"pending\";\n        if (activeTab === \"completed\") return task.status === \"completed\";\n        return true; // Return all tasks if the active tab is \"all\"\n    });\n    // Format the current date to display\n    const currentDate = new Intl.DateTimeFormat(\"en-US\", {\n        weekday: \"long\",\n        day: \"2-digit\",\n        year: \"numeric\"\n    }).format(new Date());\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Box, {\n        m: 3,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Grid, {\n                container: true,\n                spacing: 2,\n                mt: 2,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 12,\n                        md: 6,\n                        lg: 6,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Typography, {\n                            sx: {\n                                fontSize: {\n                                    xs: \"24px\",\n                                    md: \"48px\",\n                                    lg: \"64px\"\n                                },\n                                fontWeight: \"bold\"\n                            },\n                            children: \"My ToDo List\"\n                        }, void 0, false, {\n                            fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                            lineNumber: 327,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                        lineNumber: 326,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 12,\n                        md: 6,\n                        lg: 6,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Typography, {\n                            variant: \"h6\",\n                            align: \"right\",\n                            sx: {\n                                marginTop: {\n                                    xs: \"8px\",\n                                    md: \"16px\",\n                                    lg: \"24px\"\n                                }\n                            },\n                            children: currentDate\n                        }, void 0, false, {\n                            fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                            lineNumber: 337,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                        lineNumber: 336,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                lineNumber: 325,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: addTask,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Grid, {\n                    container: true,\n                    alignItems: \"center\",\n                    mb: 4,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Grid, {\n                            item: true,\n                            xs: 10,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.TextField, {\n                                label: \"New Task\",\n                                value: title,\n                                onChange: (e)=>setTitle(e.target.value),\n                                required: true,\n                                fullWidth: true,\n                                margin: \"normal\",\n                                sx: {\n                                    fontSize: {\n                                        xs: \"14px\",\n                                        md: \"16px\"\n                                    }\n                                }\n                            }, void 0, false, {\n                                fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                                lineNumber: 349,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                            lineNumber: 348,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Grid, {\n                            item: true,\n                            xs: 2,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.IconButton, {\n                                type: \"submit\",\n                                color: \"primary\",\n                                \"aria-label\": \"add task\",\n                                size: \"large\",\n                                sx: {\n                                    mt: 1\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_Add__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    fontSize: \"large\",\n                                    sx: {\n                                        color: \"#F50057\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                                    lineNumber: 367,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                                lineNumber: 360,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                            lineNumber: 359,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                    lineNumber: 347,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                lineNumber: 346,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Tabs, {\n                value: activeTab,\n                onChange: (e, newValue)=>setActiveTab(newValue),\n                \"aria-label\": \"task filter tabs\",\n                sx: {\n                    fontSize: {\n                        xs: \"12px\",\n                        md: \"14px\"\n                    }\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Tab, {\n                        value: \"all\",\n                        label: \"All\"\n                    }, void 0, false, {\n                        fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                        lineNumber: 378,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Tab, {\n                        value: \"pending\",\n                        label: \"Pending\"\n                    }, void 0, false, {\n                        fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                        lineNumber: 379,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Tab, {\n                        value: \"completed\",\n                        label: \"Completed\"\n                    }, void 0, false, {\n                        fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                        lineNumber: 380,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                lineNumber: 372,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Grid, {\n                container: true,\n                spacing: 2,\n                mt: 2,\n                children: filteredTasks.map((task)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Grid_IconButton_Tab_Tabs_TextField_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__.Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        md: 4,\n                        lg: 3,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_taskCard__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                            task: task,\n                            onEditTask: editTask,\n                            onDeleteTask: deleteTask,\n                            onToggleTaskStatus: toggleTaskStatus,\n                            onAddSubtask: addSubtask,\n                            onDeleteSubtask: deleteSubtask,\n                            onToggleSubtaskStatus: toggleSubtaskStatus,\n                            onAddComment: addComment,\n                            onEditComment: editComment,\n                            onDeleteComment: deleteComment,\n                            onEditSubtask: editSubtask\n                        }, void 0, false, {\n                            fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                            lineNumber: 385,\n                            columnNumber: 13\n                        }, this)\n                    }, task._id, false, {\n                        fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                        lineNumber: 384,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n                lineNumber: 382,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/salomon/Documents/Projects/todo-list-app/pages/todos.js\",\n        lineNumber: 324,\n        columnNumber: 5\n    }, this);\n}\n_s(Todos, \"jq/RiQZgnUNJoZIzuRwKOhnNZ6w=\");\n_c = Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3ZGLCtEQUFPQTtvQ0FBQzhGLFVBQVM7b0NBQVFELElBQUk7d0NBQUVrQixPQUFPO29DQUFVOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBS3pELDhEQUFDdEgsdUhBQUlBO2dCQUNIK0csT0FBT3pGO2dCQUNQMEYsVUFBVSxDQUFDekUsR0FBR2tGLFdBQWFsRyxhQUFha0c7Z0JBQ3hDRixjQUFXO2dCQUNYbkIsSUFBSTtvQkFBRUMsVUFBVTt3QkFBRUwsSUFBSTt3QkFBUUUsSUFBSTtvQkFBTztnQkFBRTs7a0NBRTNDLDhEQUFDakcsc0hBQUdBO3dCQUFDOEcsT0FBTTt3QkFBTUQsT0FBTTs7Ozs7O2tDQUN2Qiw4REFBQzdHLHNIQUFHQTt3QkFBQzhHLE9BQU07d0JBQVVELE9BQU07Ozs7OztrQ0FDM0IsOERBQUM3RyxzSEFBR0E7d0JBQUM4RyxPQUFNO3dCQUFZRCxPQUFNOzs7Ozs7Ozs7Ozs7MEJBRS9CLDhEQUFDMUcsdUhBQUlBO2dCQUFDd0YsU0FBUztnQkFBQ0MsU0FBUztnQkFBR0MsSUFBSTswQkFDN0JaLGNBQWNwQixHQUFHLENBQUMsQ0FBQ1gscUJBQ2xCLDhEQUFDL0MsdUhBQUlBO3dCQUFDMkYsSUFBSTt3QkFBQ0MsSUFBSTt3QkFBSUMsSUFBSTt3QkFBR0MsSUFBSTt3QkFBR0MsSUFBSTtrQ0FDbkMsNEVBQUMzRiw0REFBUUE7NEJBQ1AyQyxNQUFNQTs0QkFDTnVFLFlBQVk1RTs0QkFDWjZFLGNBQWNsRTs0QkFDZG1FLG9CQUFvQmhFOzRCQUNwQmlFLGNBQWNuRTs0QkFDZG9FLGlCQUFpQjFEOzRCQUNqQjJELHVCQUF1QnhEOzRCQUN2QnlELGNBQWNyRDs0QkFDZHNELGVBQWVuRDs0QkFDZm9ELGlCQUFpQmpEOzRCQUNqQmtELGVBQWVuRTs7Ozs7O3VCQVowQmIsS0FBS0csR0FBRzs7Ozs7Ozs7Ozs7Ozs7OztBQW1CL0Q7R0FyWXdCN0M7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvdG9kb3MuanM/Nzc0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7IC8vIEltcG9ydGluZyBob29rcyBmcm9tIFJlYWN0IGZvciBzdGF0ZSBtYW5hZ2VtZW50IGFuZCBzaWRlIGVmZmVjdHNcbmltcG9ydCB7XG4gIFRhYnMsXG4gIFRhYixcbiAgVGV4dEZpZWxkLFxuICBJY29uQnV0dG9uLFxuICBHcmlkLFxuICBCb3gsXG4gIFR5cG9ncmFwaHksXG59IGZyb20gXCJAbXVpL21hdGVyaWFsXCI7IC8vIEltcG9ydGluZyBNYXRlcmlhbC1VSSBjb21wb25lbnRzXG5pbXBvcnQgQWRkSWNvbiBmcm9tIFwiQG11aS9pY29ucy1tYXRlcmlhbC9BZGRcIjsgLy8gSW1wb3J0aW5nIHRoZSBBZGRJY29uIGNvbXBvbmVudCBmcm9tIE1hdGVyaWFsLVVJXG5pbXBvcnQgVGFza0NhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvdGFza0NhcmRcIjsgLy8gSW1wb3J0aW5nIHRoZSBUYXNrQ2FyZCBjb21wb25lbnRcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVG9kb3MoKSB7XG4gIC8vIFN0YXRlIG1hbmFnZW1lbnRcbiAgY29uc3QgW3Rhc2tzLCBzZXRUYXNrc10gPSB1c2VTdGF0ZShbXSk7IC8vIFN0YXRlIHRvIHN0b3JlIHRoZSBsaXN0IG9mIHRhc2tzXG4gIGNvbnN0IFt0aXRsZSwgc2V0VGl0bGVdID0gdXNlU3RhdGUoXCJcIik7IC8vIFN0YXRlIGZvciB0aGUgdGl0bGUgb2YgYSBuZXcgdGFza1xuICBjb25zdCBbc3VidGFza1RpdGxlLCBzZXRTdWJ0YXNrVGl0bGVdID0gdXNlU3RhdGUoXCJcIik7IC8vIFN0YXRlIGZvciB0aGUgdGl0bGUgb2YgYSBuZXcgc3VidGFza1xuICBjb25zdCBbY29tbWVudFRleHQsIHNldENvbW1lbnRUZXh0XSA9IHVzZVN0YXRlKFwiXCIpOyAvLyBTdGF0ZSBmb3IgdGhlIHRleHQgb2YgYSBuZXcgY29tbWVudFxuICBjb25zdCBbZWRpdGluZ1Rhc2tJZCwgc2V0RWRpdGluZ1Rhc2tJZF0gPSB1c2VTdGF0ZShudWxsKTsgLy8gU3RhdGUgdG8gdHJhY2sgdGhlIHRhc2sgYmVpbmcgZWRpdGVkXG4gIGNvbnN0IFtlZGl0aW5nQ29tbWVudElkLCBzZXRFZGl0aW5nQ29tbWVudElkXSA9IHVzZVN0YXRlKG51bGwpOyAvLyBTdGF0ZSB0byB0cmFjayB0aGUgY29tbWVudCBiZWluZyBlZGl0ZWRcbiAgY29uc3QgW2FjdGl2ZVRhYiwgc2V0QWN0aXZlVGFiXSA9IHVzZVN0YXRlKFwiYWxsXCIpOyAvLyBTdGF0ZSB0byBtYW5hZ2UgdGhlIGFjdGl2ZSB0YWIgKGFsbCwgcGVuZGluZywgY29tcGxldGVkKVxuXG4gIC8vIEVmZmVjdCB0byBmZXRjaCB0YXNrcyBmcm9tIHRoZSBzZXJ2ZXIgd2hlbiB0aGUgY29tcG9uZW50IG1vdW50c1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoVGFza3MoKTtcbiAgfSwgW10pO1xuXG4gIC8vIEZ1bmN0aW9uIHRvIGZldGNoIHRhc2tzIGZyb20gdGhlIHNlcnZlclxuICBjb25zdCBmZXRjaFRhc2tzID0gYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo1MDAxL2FwaS90YXNrc1wiLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInRva2VuXCIpfWAsIC8vIFNlbmRpbmcgYXV0aG9yaXphdGlvbiBoZWFkZXIgd2l0aCB0aGUgcmVxdWVzdFxuICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICBjb25zb2xlLmxvZyhcIkFQSSByZXNwb25zZTpcIiwgZGF0YSk7XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgc2V0VGFza3MoZGF0YSk7IC8vIFNldCB0aGUgZmV0Y2hlZCB0YXNrcyBpbiBzdGF0ZVxuICAgIH0gZWxzZSB7XG4gICAgICBzZXRUYXNrcyhbXSk7IC8vIENsZWFyIHRhc2tzIGlmIHRoZSByZXNwb25zZSBpcyBub3QgYW4gYXJyYXlcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJVbmV4cGVjdGVkIEFQSSByZXNwb25zZTpcIiwgZGF0YSk7XG4gICAgfVxuICB9O1xuXG4gIC8vIEZ1bmN0aW9uIHRvIGFkZCBhIG5ldyB0YXNrXG4gIGNvbnN0IGFkZFRhc2sgPSBhc3luYyAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTsgLy8gUHJldmVudCB0aGUgZGVmYXVsdCBmb3JtIHN1Ym1pc3Npb24gYmVoYXZpb3JcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMS9hcGkvdGFza3NcIiwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIiwgLy8gSFRUUCBtZXRob2QgZm9yIGNyZWF0aW5nIGEgbmV3IHRhc2tcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsIC8vIFNldCB0aGUgcmVxdWVzdCBjb250ZW50IHR5cGUgdG8gSlNPTlxuICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7bG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ0b2tlblwiKX1gLCAvLyBBdXRob3JpemF0aW9uIGhlYWRlclxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgdGl0bGUgfSksIC8vIFNlbmQgdGhlIHRhc2sgdGl0bGUgaW4gdGhlIHJlcXVlc3QgYm9keVxuICAgIH0pO1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIGZldGNoVGFza3MoKTsgLy8gUmVmcmVzaCB0YXNrcyBhZnRlciBzdWNjZXNzZnVsIGFkZGl0aW9uXG4gICAgICBzZXRUaXRsZShcIlwiKTsgLy8gQ2xlYXIgdGhlIHRhc2sgdGl0bGUgaW5wdXRcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFkZGluZyB0YXNrXCIpO1xuICAgIH1cbiAgfTtcblxuICAvLyBGdW5jdGlvbiB0byBlZGl0IGFuIGV4aXN0aW5nIHRhc2tcbiAgY29uc3QgZWRpdFRhc2sgPSBhc3luYyAoXG4gICAgdGFza0lkLFxuICAgIHVwZGF0ZWRUaXRsZSA9IHRpdGxlLFxuICAgIHVwZGF0ZWRTdWJ0YXNrcyA9IG51bGwsXG4gICAgdXBkYXRlZFN0YXR1cyA9IG51bGxcbiAgKSA9PiB7XG4gICAgY29uc3QgdGFzayA9IHRhc2tzLmZpbmQoKHQpID0+IHQuX2lkID09PSB0YXNrSWQpO1xuXG4gICAgaWYgKCF0YXNrKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiVGFzayBub3QgZm91bmQgd2l0aCBJRDpcIiwgdGFza0lkKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDo1MDAxL2FwaS90YXNrcy8ke3Rhc2tJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsIC8vIEhUVFAgbWV0aG9kIGZvciB1cGRhdGluZyBhbiBleGlzdGluZyB0YXNrXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLCAvLyBTZXQgdGhlIHJlcXVlc3QgY29udGVudCB0eXBlIHRvIEpTT05cbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIil9YCwgLy8gQXV0aG9yaXphdGlvbiBoZWFkZXJcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIHRpdGxlOiB1cGRhdGVkVGl0bGUgfHwgdGFzay50aXRsZSwgLy8gVXNlIHRoZSB1cGRhdGVkIHRpdGxlIG9yIGtlZXAgdGhlIGV4aXN0aW5nIG9uZVxuICAgICAgICBzdGF0dXM6IHVwZGF0ZWRTdGF0dXMgfHwgdGFzay5zdGF0dXMsIC8vIFVzZSB0aGUgdXBkYXRlZCBzdGF0dXMgb3Iga2VlcCB0aGUgZXhpc3Rpbmcgb25lXG4gICAgICAgIHN1YnRhc2tzOiB1cGRhdGVkU3VidGFza3MgfHwgdGFzay5zdWJ0YXNrcywgLy8gVXNlIHRoZSB1cGRhdGVkIHN1YnRhc2tzIG9yIGtlZXAgdGhlIGV4aXN0aW5nIG9uZXNcbiAgICAgIH0pLFxuICAgIH0pO1xuXG4gICAgaWYgKHJlcy5vaykge1xuICAgICAgZmV0Y2hUYXNrcygpOyAvLyBSZWZyZXNoIHRhc2tzIGFmdGVyIHN1Y2Nlc3NmdWwgZWRpdFxuICAgICAgc2V0VGl0bGUoXCJcIik7IC8vIENsZWFyIHRoZSB0YXNrIHRpdGxlIGlucHV0XG4gICAgICBzZXRFZGl0aW5nVGFza0lkKG51bGwpOyAvLyBSZXNldCB0aGUgZWRpdGluZyBzdGF0ZVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZWRpdGluZyB0YXNrXCIpO1xuICAgIH1cbiAgfTtcblxuICAvLyBGdW5jdGlvbiB0byBkZWxldGUgYW4gZXhpc3RpbmcgdGFza1xuICBjb25zdCBkZWxldGVUYXNrID0gYXN5bmMgKHRhc2tJZCkgPT4ge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwOi8vbG9jYWxob3N0OjUwMDEvYXBpL3Rhc2tzLyR7dGFza0lkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIiwgLy8gSFRUUCBtZXRob2QgZm9yIGRlbGV0aW5nIGEgdGFza1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7bG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ0b2tlblwiKX1gLCAvLyBBdXRob3JpemF0aW9uIGhlYWRlclxuICAgICAgfSxcbiAgICB9KTtcbiAgICBpZiAocmVzLm9rKSB7XG4gICAgICBmZXRjaFRhc2tzKCk7IC8vIFJlZnJlc2ggdGFza3MgYWZ0ZXIgc3VjY2Vzc2Z1bCBkZWxldGlvblxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZGVsZXRpbmcgdGFza1wiKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gRnVuY3Rpb24gdG8gYWRkIGEgbmV3IHN1YnRhc2sgdG8gYW4gZXhpc3RpbmcgdGFza1xuICBjb25zdCBhZGRTdWJ0YXNrID0gYXN5bmMgKHRhc2tJZCwgbmV3U3VidGFza1RpdGxlKSA9PiB7XG4gICAgY29uc3QgdGFzayA9IHRhc2tzLmZpbmQoKHRhc2spID0+IHRhc2suX2lkID09PSB0YXNrSWQpO1xuICAgIGNvbnN0IHVwZGF0ZWRTdWJ0YXNrcyA9IFtcbiAgICAgIC4uLnRhc2suc3VidGFza3MsXG4gICAgICB7IHRpdGxlOiBuZXdTdWJ0YXNrVGl0bGUsIHN0YXR1czogXCJwZW5kaW5nXCIgfSwgLy8gQWRkIHRoZSBuZXcgc3VidGFzayB3aXRoIGEgcGVuZGluZyBzdGF0dXNcbiAgICBdO1xuXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMS9hcGkvdGFza3MvJHt0YXNrSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLCAvLyBIVFRQIG1ldGhvZCBmb3IgdXBkYXRpbmcgYW4gZXhpc3RpbmcgdGFza1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiwgLy8gU2V0IHRoZSByZXF1ZXN0IGNvbnRlbnQgdHlwZSB0byBKU09OXG4gICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInRva2VuXCIpfWAsIC8vIEF1dGhvcml6YXRpb24gaGVhZGVyXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyB0aXRsZTogdGFzay50aXRsZSwgc3VidGFza3M6IHVwZGF0ZWRTdWJ0YXNrcyB9KSwgLy8gU2VuZCB0aGUgdXBkYXRlZCBzdWJ0YXNrcyBpbiB0aGUgcmVxdWVzdCBib2R5XG4gICAgfSk7XG5cbiAgICBpZiAocmVzLm9rKSB7XG4gICAgICBmZXRjaFRhc2tzKCk7IC8vIFJlZnJlc2ggdGFza3MgYWZ0ZXIgc3VjY2Vzc2Z1bCBhZGRpdGlvbiBvZiBzdWJ0YXNrXG4gICAgICBzZXRTdWJ0YXNrVGl0bGUoXCJcIik7IC8vIENsZWFyIHRoZSBzdWJ0YXNrIHRpdGxlIGlucHV0XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBhZGRpbmcgc3VidGFza1wiKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gRnVuY3Rpb24gdG8gdG9nZ2xlIHRoZSBzdGF0dXMgb2YgYSB0YXNrIGJldHdlZW4gJ3BlbmRpbmcnIGFuZCAnY29tcGxldGVkJ1xuICBjb25zdCB0b2dnbGVUYXNrU3RhdHVzID0gKHRhc2spID0+IHtcbiAgICBjb25zdCBuZXdTdGF0dXMgPSB0YXNrLnN0YXR1cyA9PT0gXCJwZW5kaW5nXCIgPyBcImNvbXBsZXRlZFwiIDogXCJwZW5kaW5nXCI7XG4gICAgZWRpdFRhc2soXG4gICAgICB0YXNrLl9pZCxcbiAgICAgIHRhc2sudGl0bGUsIC8vIEtlZXAgdGhlIGN1cnJlbnQgdGl0bGVcbiAgICAgIHRhc2suc3VidGFza3MubWFwKChzdWJ0YXNrKSA9PiAoe1xuICAgICAgICAuLi5zdWJ0YXNrLFxuICAgICAgICBzdGF0dXM6XG4gICAgICAgICAgc3VidGFzay5zdGF0dXMgPT09IFwicGVuZGluZ1wiICYmIG5ld1N0YXR1cyA9PT0gXCJjb21wbGV0ZWRcIlxuICAgICAgICAgICAgPyBcImNvbXBsZXRlZFwiXG4gICAgICAgICAgICA6IHN1YnRhc2suc3RhdHVzLFxuICAgICAgfSkpLFxuICAgICAgbmV3U3RhdHVzIC8vIFBhc3MgdGhlIG5ldyBzdGF0dXNcbiAgICApO1xuICB9O1xuXG4gIC8vIEZ1bmN0aW9uIHRvIGVkaXQgYW4gZXhpc3Rpbmcgc3VidGFza1xuICBjb25zdCBlZGl0U3VidGFzayA9IGFzeW5jICh0YXNrSWQsIHN1YnRhc2tJbmRleCwgbmV3U3VidGFza1RpdGxlKSA9PiB7XG4gICAgY29uc3QgdGFzayA9IHRhc2tzLmZpbmQoKHRhc2spID0+IHRhc2suX2lkID09PSB0YXNrSWQpO1xuICAgIGNvbnN0IHVwZGF0ZWRTdWJ0YXNrcyA9IHRhc2suc3VidGFza3MubWFwKChzdWJ0YXNrLCBpbmRleCkgPT5cbiAgICAgIGluZGV4ID09PSBzdWJ0YXNrSW5kZXggPyB7IC4uLnN1YnRhc2ssIHRpdGxlOiBuZXdTdWJ0YXNrVGl0bGUgfSA6IHN1YnRhc2tcbiAgICApO1xuXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMS9hcGkvdGFza3MvJHt0YXNrSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLCAvLyBIVFRQIG1ldGhvZCBmb3IgdXBkYXRpbmcgYW4gZXhpc3RpbmcgdGFza1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiwgLy8gU2V0IHRoZSByZXF1ZXN0IGNvbnRlbnQgdHlwZSB0byBKU09OXG4gICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInRva2VuXCIpfWAsIC8vIEF1dGhvcml6YXRpb24gaGVhZGVyXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyB0aXRsZTogdGFzay50aXRsZSwgc3VidGFza3M6IHVwZGF0ZWRTdWJ0YXNrcyB9KSwgLy8gU2VuZCB0aGUgdXBkYXRlZCBzdWJ0YXNrcyBpbiB0aGUgcmVxdWVzdCBib2R5XG4gICAgfSk7XG5cbiAgICBpZiAocmVzLm9rKSB7XG4gICAgICAvLyBVcGRhdGUgdGhlIGxvY2FsIHN0YXRlIHRvIHJlZmxlY3QgdGhlIGVkaXRlZCBzdWJ0YXNrXG4gICAgICBzZXRUYXNrcygocHJldlRhc2tzKSA9PlxuICAgICAgICBwcmV2VGFza3MubWFwKCh0KSA9PlxuICAgICAgICAgIHQuX2lkID09PSB0YXNrSWQgPyB7IC4uLnQsIHN1YnRhc2tzOiB1cGRhdGVkU3VidGFza3MgfSA6IHRcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGVkaXRpbmcgc3VidGFza1wiKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gRnVuY3Rpb24gdG8gZGVsZXRlIGEgc3VidGFzayBmcm9tIGFuIGV4aXN0aW5nIHRhc2tcbiAgY29uc3QgZGVsZXRlU3VidGFzayA9IGFzeW5jICh0YXNrSWQsIHN1YnRhc2tJbmRleCkgPT4ge1xuICAgIGNvbnN0IHRhc2sgPSB0YXNrcy5maW5kKCh0YXNrKSA9PiB0YXNrLl9pZCA9PT0gdGFza0lkKTtcbiAgICBjb25zdCB1cGRhdGVkU3VidGFza3MgPSB0YXNrLnN1YnRhc2tzLmZpbHRlcihcbiAgICAgIChfLCBpbmRleCkgPT4gaW5kZXggIT09IHN1YnRhc2tJbmRleFxuICAgICk7XG5cbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDo1MDAxL2FwaS90YXNrcy8ke3Rhc2tJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsIC8vIEhUVFAgbWV0aG9kIGZvciB1cGRhdGluZyBhbiBleGlzdGluZyB0YXNrXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLCAvLyBTZXQgdGhlIHJlcXVlc3QgY29udGVudCB0eXBlIHRvIEpTT05cbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIil9YCwgLy8gQXV0aG9yaXphdGlvbiBoZWFkZXJcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHRpdGxlOiB0YXNrLnRpdGxlLCBzdWJ0YXNrczogdXBkYXRlZFN1YnRhc2tzIH0pLCAvLyBTZW5kIHRoZSB1cGRhdGVkIHN1YnRhc2tzIGluIHRoZSByZXF1ZXN0IGJvZHlcbiAgICB9KTtcblxuICAgIGlmIChyZXMub2spIHtcbiAgICAgIGZldGNoVGFza3MoKTsgLy8gUmVmcmVzaCB0YXNrcyBhZnRlciBzdWNjZXNzZnVsIGRlbGV0aW9uIG9mIHN1YnRhc2tcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGRlbGV0aW5nIHN1YnRhc2tcIik7XG4gICAgfVxuICB9O1xuXG4gIC8vIEZ1bmN0aW9uIHRvIHRvZ2dsZSB0aGUgc3RhdHVzIG9mIGEgc3VidGFzayBiZXR3ZWVuICdwZW5kaW5nJyBhbmQgJ2NvbXBsZXRlZCdcbiAgY29uc3QgdG9nZ2xlU3VidGFza1N0YXR1cyA9IGFzeW5jICh0YXNrSWQsIHN1YnRhc2tJbmRleCkgPT4ge1xuICAgIGNvbnN0IHRhc2sgPSB0YXNrcy5maW5kKCh0YXNrKSA9PiB0YXNrLl9pZCA9PT0gdGFza0lkKTtcbiAgICBjb25zdCB1cGRhdGVkU3VidGFza3MgPSB0YXNrLnN1YnRhc2tzLm1hcCgoc3VidGFzaywgaW5kZXgpID0+XG4gICAgICBpbmRleCA9PT0gc3VidGFza0luZGV4XG4gICAgICAgID8ge1xuICAgICAgICAgICAgLi4uc3VidGFzayxcbiAgICAgICAgICAgIHN0YXR1czogc3VidGFzay5zdGF0dXMgPT09IFwicGVuZGluZ1wiID8gXCJjb21wbGV0ZWRcIiA6IFwicGVuZGluZ1wiLFxuICAgICAgICAgIH1cbiAgICAgICAgOiBzdWJ0YXNrXG4gICAgKTtcblxuICAgIC8vIFVwZGF0ZSB0aGUgdGFzayBzdGF0dXMgYmFzZWQgb24gc3VidGFza3MgY29tcGxldGlvblxuICAgIGNvbnN0IGFsbFN1YnRhc2tzQ29tcGxldGVkID0gdXBkYXRlZFN1YnRhc2tzLmV2ZXJ5KFxuICAgICAgKHN1YnRhc2spID0+IHN1YnRhc2suc3RhdHVzID09PSBcImNvbXBsZXRlZFwiXG4gICAgKTtcbiAgICBjb25zdCBuZXdUYXNrU3RhdHVzID0gYWxsU3VidGFza3NDb21wbGV0ZWQgPyBcImNvbXBsZXRlZFwiIDogXCJwZW5kaW5nXCI7XG5cbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDo1MDAxL2FwaS90YXNrcy8ke3Rhc2tJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsIC8vIEhUVFAgbWV0aG9kIGZvciB1cGRhdGluZyBhbiBleGlzdGluZyB0YXNrXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLCAvLyBTZXQgdGhlIHJlcXVlc3QgY29udGVudCB0eXBlIHRvIEpTT05cbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIil9YCwgLy8gQXV0aG9yaXphdGlvbiBoZWFkZXJcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIHRpdGxlOiB0YXNrLnRpdGxlLFxuICAgICAgICBzdGF0dXM6IG5ld1Rhc2tTdGF0dXMsXG4gICAgICAgIHN1YnRhc2tzOiB1cGRhdGVkU3VidGFza3MsXG4gICAgICB9KSwgLy8gU2VuZCB0aGUgdXBkYXRlZCB0YXNrIHN0YXR1cyBhbmQgc3VidGFza3MgaW4gdGhlIHJlcXVlc3QgYm9keVxuICAgIH0pO1xuXG4gICAgaWYgKHJlcy5vaykge1xuICAgICAgZmV0Y2hUYXNrcygpOyAvLyBSZWZyZXNoIHRhc2tzIGFmdGVyIHN1Y2Nlc3NmdWwgdG9nZ2xpbmcgb2Ygc3VidGFzayBzdGF0dXNcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHRvZ2dsaW5nIHN1YnRhc2sgc3RhdHVzXCIpO1xuICAgIH1cbiAgfTtcblxuICAvLyBGdW5jdGlvbiB0byBhZGQgYSBjb21tZW50IHRvIGEgdGFza1xuICBjb25zdCBhZGRDb21tZW50ID0gYXN5bmMgKHRhc2tJZCwgbmV3Q29tbWVudFRleHQpID0+IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgIGBodHRwOi8vbG9jYWxob3N0OjUwMDEvYXBpL3Rhc2tzLyR7dGFza0lkfS9jb21tZW50c2AsXG4gICAgICB7XG4gICAgICAgIG1ldGhvZDogXCJQVVRcIiwgLy8gSFRUUCBtZXRob2QgZm9yIGFkZGluZyBhIGNvbW1lbnQgdG8gYSB0YXNrXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiwgLy8gU2V0IHRoZSByZXF1ZXN0IGNvbnRlbnQgdHlwZSB0byBKU09OXG4gICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIil9YCwgLy8gQXV0aG9yaXphdGlvbiBoZWFkZXJcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyB0ZXh0OiBuZXdDb21tZW50VGV4dCB9KSwgLy8gU2VuZCB0aGUgY29tbWVudCB0ZXh0IGluIHRoZSByZXF1ZXN0IGJvZHlcbiAgICAgIH1cbiAgICApO1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIGZldGNoVGFza3MoKTsgLy8gUmVmcmVzaCB0YXNrcyBhZnRlciBzdWNjZXNzZnVsIGFkZGl0aW9uIG9mIGNvbW1lbnRcbiAgICAgIHNldENvbW1lbnRUZXh0KFwiXCIpOyAvLyBDbGVhciB0aGUgY29tbWVudCBpbnB1dCBmaWVsZFxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgYWRkaW5nIGNvbW1lbnRcIik7XG4gICAgfVxuICB9O1xuXG4gIC8vIEZ1bmN0aW9uIHRvIGVkaXQgYW4gZXhpc3RpbmcgY29tbWVudCBvbiBhIHRhc2tcbiAgY29uc3QgZWRpdENvbW1lbnQgPSBhc3luYyAodGFza0lkLCBjb21tZW50SWQsIHVwZGF0ZWRDb21tZW50VGV4dCkgPT4ge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFxuICAgICAgYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMS9hcGkvdGFza3MvJHt0YXNrSWR9L2NvbW1lbnRzLyR7Y29tbWVudElkfWAsXG4gICAgICB7XG4gICAgICAgIG1ldGhvZDogXCJQVVRcIiwgLy8gSFRUUCBtZXRob2QgZm9yIGVkaXRpbmcgYSBjb21tZW50XG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiwgLy8gU2V0IHRoZSByZXF1ZXN0IGNvbnRlbnQgdHlwZSB0byBKU09OXG4gICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIil9YCwgLy8gQXV0aG9yaXphdGlvbiBoZWFkZXJcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyB0ZXh0OiB1cGRhdGVkQ29tbWVudFRleHQgfSksIC8vIFNlbmQgdGhlIHVwZGF0ZWQgY29tbWVudCB0ZXh0IGluIHRoZSByZXF1ZXN0IGJvZHlcbiAgICAgIH1cbiAgICApO1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIGZldGNoVGFza3MoKTsgLy8gUmVmcmVzaCB0YXNrcyB0byByZWZsZWN0IHRoZSB1cGRhdGVcbiAgICAgIHNldENvbW1lbnRUZXh0KFwiXCIpOyAvLyBDbGVhciB0aGUgY29tbWVudCB0ZXh0IGlucHV0XG4gICAgICBzZXRFZGl0aW5nQ29tbWVudElkKG51bGwpOyAvLyBSZXNldCB0aGUgZWRpdGluZyBzdGF0ZVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZWRpdGluZyBjb21tZW50XCIpO1xuICAgIH1cbiAgfTtcblxuICAvLyBGdW5jdGlvbiB0byBkZWxldGUgYSBjb21tZW50IGZyb20gYSB0YXNrXG4gIGNvbnN0IGRlbGV0ZUNvbW1lbnQgPSBhc3luYyAodGFza0lkLCBjb21tZW50SWQpID0+IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgIGBodHRwOi8vbG9jYWxob3N0OjUwMDEvYXBpL3Rhc2tzLyR7dGFza0lkfS9jb21tZW50cy8ke2NvbW1lbnRJZH1gLFxuICAgICAge1xuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsIC8vIEhUVFAgbWV0aG9kIGZvciBkZWxldGluZyBhIGNvbW1lbnRcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInRva2VuXCIpfWAsIC8vIEF1dGhvcml6YXRpb24gaGVhZGVyXG4gICAgICAgIH0sXG4gICAgICB9XG4gICAgKTtcbiAgICBpZiAocmVzLm9rKSB7XG4gICAgICBmZXRjaFRhc2tzKCk7IC8vIFJlZnJlc2ggdGFza3MgYWZ0ZXIgc3VjY2Vzc2Z1bCBkZWxldGlvbiBvZiBjb21tZW50XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBkZWxldGluZyBjb21tZW50XCIpO1xuICAgIH1cbiAgfTtcblxuICAvLyBGaWx0ZXIgdGFza3MgYmFzZWQgb24gdGhlIGFjdGl2ZSB0YWIgKGFsbCwgcGVuZGluZywgY29tcGxldGVkKVxuICBjb25zdCBmaWx0ZXJlZFRhc2tzID0gdGFza3MuZmlsdGVyKCh0YXNrKSA9PiB7XG4gICAgaWYgKGFjdGl2ZVRhYiA9PT0gXCJwZW5kaW5nXCIpIHJldHVybiB0YXNrLnN0YXR1cyA9PT0gXCJwZW5kaW5nXCI7XG4gICAgaWYgKGFjdGl2ZVRhYiA9PT0gXCJjb21wbGV0ZWRcIikgcmV0dXJuIHRhc2suc3RhdHVzID09PSBcImNvbXBsZXRlZFwiO1xuICAgIHJldHVybiB0cnVlOyAvLyBSZXR1cm4gYWxsIHRhc2tzIGlmIHRoZSBhY3RpdmUgdGFiIGlzIFwiYWxsXCJcbiAgfSk7XG5cbiAgLy8gRm9ybWF0IHRoZSBjdXJyZW50IGRhdGUgdG8gZGlzcGxheVxuICBjb25zdCBjdXJyZW50RGF0ZSA9IG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KFwiZW4tVVNcIiwge1xuICAgIHdlZWtkYXk6IFwibG9uZ1wiLFxuICAgIGRheTogXCIyLWRpZ2l0XCIsXG4gICAgeWVhcjogXCJudW1lcmljXCIsXG4gIH0pLmZvcm1hdChuZXcgRGF0ZSgpKTtcblxuICByZXR1cm4gKFxuICAgIDxCb3ggbT17M30+XG4gICAgICA8R3JpZCBjb250YWluZXIgc3BhY2luZz17Mn0gbXQ9ezJ9PlxuICAgICAgICA8R3JpZCBpdGVtIHhzPXsxMn0gc209ezEyfSBtZD17Nn0gbGc9ezZ9PlxuICAgICAgICAgIDxUeXBvZ3JhcGh5XG4gICAgICAgICAgICBzeD17e1xuICAgICAgICAgICAgICBmb250U2l6ZTogeyB4czogXCIyNHB4XCIsIG1kOiBcIjQ4cHhcIiwgbGc6IFwiNjRweFwiIH0sXG4gICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IFwiYm9sZFwiLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBNeSBUb0RvIExpc3RcbiAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgIDwvR3JpZD5cbiAgICAgICAgPEdyaWQgaXRlbSB4cz17MTJ9IHNtPXsxMn0gbWQ9ezZ9IGxnPXs2fT5cbiAgICAgICAgICA8VHlwb2dyYXBoeVxuICAgICAgICAgICAgdmFyaWFudD1cImg2XCJcbiAgICAgICAgICAgIGFsaWduPVwicmlnaHRcIlxuICAgICAgICAgICAgc3g9e3sgbWFyZ2luVG9wOiB7IHhzOiBcIjhweFwiLCBtZDogXCIxNnB4XCIsIGxnOiBcIjI0cHhcIiB9IH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2N1cnJlbnREYXRlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9HcmlkPlxuICAgICAgPC9HcmlkPlxuICAgICAgPGZvcm0gb25TdWJtaXQ9e2FkZFRhc2t9PlxuICAgICAgICA8R3JpZCBjb250YWluZXIgYWxpZ25JdGVtcz1cImNlbnRlclwiIG1iPXs0fT5cbiAgICAgICAgICA8R3JpZCBpdGVtIHhzPXsxMH0+XG4gICAgICAgICAgICA8VGV4dEZpZWxkXG4gICAgICAgICAgICAgIGxhYmVsPVwiTmV3IFRhc2tcIlxuICAgICAgICAgICAgICB2YWx1ZT17dGl0bGV9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0VGl0bGUoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICBmdWxsV2lkdGhcbiAgICAgICAgICAgICAgbWFyZ2luPVwibm9ybWFsXCJcbiAgICAgICAgICAgICAgc3g9e3sgZm9udFNpemU6IHsgeHM6IFwiMTRweFwiLCBtZDogXCIxNnB4XCIgfSB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L0dyaWQ+XG4gICAgICAgICAgPEdyaWQgaXRlbSB4cz17Mn0+XG4gICAgICAgICAgICA8SWNvbkJ1dHRvblxuICAgICAgICAgICAgICB0eXBlPVwic3VibWl0XCJcbiAgICAgICAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcbiAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cImFkZCB0YXNrXCJcbiAgICAgICAgICAgICAgc2l6ZT1cImxhcmdlXCJcbiAgICAgICAgICAgICAgc3g9e3sgbXQ6IDEgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPEFkZEljb24gZm9udFNpemU9XCJsYXJnZVwiIHN4PXt7IGNvbG9yOiBcIiNGNTAwNTdcIiB9fSAvPlxuICAgICAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgICAgIDwvR3JpZD5cbiAgICAgICAgPC9HcmlkPlxuICAgICAgPC9mb3JtPlxuICAgICAgPFRhYnNcbiAgICAgICAgdmFsdWU9e2FjdGl2ZVRhYn1cbiAgICAgICAgb25DaGFuZ2U9eyhlLCBuZXdWYWx1ZSkgPT4gc2V0QWN0aXZlVGFiKG5ld1ZhbHVlKX1cbiAgICAgICAgYXJpYS1sYWJlbD1cInRhc2sgZmlsdGVyIHRhYnNcIlxuICAgICAgICBzeD17eyBmb250U2l6ZTogeyB4czogXCIxMnB4XCIsIG1kOiBcIjE0cHhcIiB9IH19XG4gICAgICA+XG4gICAgICAgIDxUYWIgdmFsdWU9XCJhbGxcIiBsYWJlbD1cIkFsbFwiIC8+XG4gICAgICAgIDxUYWIgdmFsdWU9XCJwZW5kaW5nXCIgbGFiZWw9XCJQZW5kaW5nXCIgLz5cbiAgICAgICAgPFRhYiB2YWx1ZT1cImNvbXBsZXRlZFwiIGxhYmVsPVwiQ29tcGxldGVkXCIgLz5cbiAgICAgIDwvVGFicz5cbiAgICAgIDxHcmlkIGNvbnRhaW5lciBzcGFjaW5nPXsyfSBtdD17Mn0+XG4gICAgICAgIHtmaWx0ZXJlZFRhc2tzLm1hcCgodGFzaykgPT4gKFxuICAgICAgICAgIDxHcmlkIGl0ZW0geHM9ezEyfSBzbT17Nn0gbWQ9ezR9IGxnPXszfSBrZXk9e3Rhc2suX2lkfT5cbiAgICAgICAgICAgIDxUYXNrQ2FyZFxuICAgICAgICAgICAgICB0YXNrPXt0YXNrfVxuICAgICAgICAgICAgICBvbkVkaXRUYXNrPXtlZGl0VGFza31cbiAgICAgICAgICAgICAgb25EZWxldGVUYXNrPXtkZWxldGVUYXNrfVxuICAgICAgICAgICAgICBvblRvZ2dsZVRhc2tTdGF0dXM9e3RvZ2dsZVRhc2tTdGF0dXN9XG4gICAgICAgICAgICAgIG9uQWRkU3VidGFzaz17YWRkU3VidGFza31cbiAgICAgICAgICAgICAgb25EZWxldGVTdWJ0YXNrPXtkZWxldGVTdWJ0YXNrfVxuICAgICAgICAgICAgICBvblRvZ2dsZVN1YnRhc2tTdGF0dXM9e3RvZ2dsZVN1YnRhc2tTdGF0dXN9XG4gICAgICAgICAgICAgIG9uQWRkQ29tbWVudD17YWRkQ29tbWVudH1cbiAgICAgICAgICAgICAgb25FZGl0Q29tbWVudD17ZWRpdENvbW1lbnR9XG4gICAgICAgICAgICAgIG9uRGVsZXRlQ29tbWVudD17ZGVsZXRlQ29tbWVudH1cbiAgICAgICAgICAgICAgb25FZGl0U3VidGFzaz17ZWRpdFN1YnRhc2t9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvR3JpZD5cbiAgICAgICAgKSl9XG4gICAgICA8L0dyaWQ+XG4gICAgPC9Cb3g+XG4gICk7XG59XG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJUYWJzIiwiVGFiIiwiVGV4dEZpZWxkIiwiSWNvbkJ1dHRvbiIsIkdyaWQiLCJCb3giLCJUeXBvZ3JhcGh5IiwiQWRkSWNvbiIsIlRhc2tDYXJkIiwiVG9kb3MiLCJ0YXNrcyIsInNldFRhc2tzIiwidGl0bGUiLCJzZXRUaXRsZSIsInN1YnRhc2tUaXRsZSIsInNldFN1YnRhc2tUaXRsZSIsImNvbW1lbnRUZXh0Iiwic2V0Q29tbWVudFRleHQiLCJlZGl0aW5nVGFza0lkIiwic2V0RWRpdGluZ1Rhc2tJZCIsImVkaXRpbmdDb21tZW50SWQiLCJzZXRFZGl0aW5nQ29tbWVudElkIiwiYWN0aXZlVGFiIiwic2V0QWN0aXZlVGFiIiwiZmV0Y2hUYXNrcyIsInJlcyIsImZldGNoIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiZGF0YSIsImpzb24iLCJjb25zb2xlIiwibG9nIiwiQXJyYXkiLCJpc0FycmF5IiwiZXJyb3IiLCJhZGRUYXNrIiwiZSIsInByZXZlbnREZWZhdWx0IiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsImVkaXRUYXNrIiwidGFza0lkIiwidXBkYXRlZFRpdGxlIiwidXBkYXRlZFN1YnRhc2tzIiwidXBkYXRlZFN0YXR1cyIsInRhc2siLCJmaW5kIiwidCIsIl9pZCIsInN0YXR1cyIsInN1YnRhc2tzIiwiZGVsZXRlVGFzayIsImFkZFN1YnRhc2siLCJuZXdTdWJ0YXNrVGl0bGUiLCJ0b2dnbGVUYXNrU3RhdHVzIiwibmV3U3RhdHVzIiwibWFwIiwic3VidGFzayIsImVkaXRTdWJ0YXNrIiwic3VidGFza0luZGV4IiwiaW5kZXgiLCJwcmV2VGFza3MiLCJkZWxldGVTdWJ0YXNrIiwiZmlsdGVyIiwiXyIsInRvZ2dsZVN1YnRhc2tTdGF0dXMiLCJhbGxTdWJ0YXNrc0NvbXBsZXRlZCIsImV2ZXJ5IiwibmV3VGFza1N0YXR1cyIsImFkZENvbW1lbnQiLCJuZXdDb21tZW50VGV4dCIsInRleHQiLCJlZGl0Q29tbWVudCIsImNvbW1lbnRJZCIsInVwZGF0ZWRDb21tZW50VGV4dCIsImRlbGV0ZUNvbW1lbnQiLCJmaWx0ZXJlZFRhc2tzIiwiY3VycmVudERhdGUiLCJJbnRsIiwiRGF0ZVRpbWVGb3JtYXQiLCJ3ZWVrZGF5IiwiZGF5IiwieWVhciIsImZvcm1hdCIsIkRhdGUiLCJtIiwiY29udGFpbmVyIiwic3BhY2luZyIsIm10IiwiaXRlbSIsInhzIiwic20iLCJtZCIsImxnIiwic3giLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJ2YXJpYW50IiwiYWxpZ24iLCJtYXJnaW5Ub3AiLCJmb3JtIiwib25TdWJtaXQiLCJhbGlnbkl0ZW1zIiwibWIiLCJsYWJlbCIsInZhbHVlIiwib25DaGFuZ2UiLCJ0YXJnZXQiLCJyZXF1aXJlZCIsImZ1bGxXaWR0aCIsIm1hcmdpbiIsInR5cGUiLCJjb2xvciIsImFyaWEtbGFiZWwiLCJzaXplIiwibmV3VmFsdWUiLCJvbkVkaXRUYXNrIiwib25EZWxldGVUYXNrIiwib25Ub2dnbGVUYXNrU3RhdHVzIiwib25BZGRTdWJ0YXNrIiwib25EZWxldGVTdWJ0YXNrIiwib25Ub2dnbGVTdWJ0YXNrU3RhdHVzIiwib25BZGRDb21tZW50Iiwib25FZGl0Q29tbWVudCIsIm9uRGVsZXRlQ29tbWVudCIsIm9uRWRpdFN1YnRhc2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/todos.js\n"));

/***/ })

});